{"version":3,"sources":["component/Chat.js","component/Join.js","component/TextBox.js","component/NavBar.js","component/Message.js","component/MessageBoard.js","App.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","className","htmlFor","type","id","placeholder","onChange","e","target","value","required","to","TextBox","message","setMessage","onSendHandler","event","preventDefault","emit","onKeyPress","key","onClick","NavBar","users","length","data-bs-toggle","href","role","aria-expanded","map","user","disconnect","Message","right","msg","MessageBoard","messages","uuidv4","Chat","location","history","setMessages","setUsers","ENDPOINT","useEffect","queryString","parse","search","io","error","push","alert","on","data","off","console","log","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.228e855e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport queryString from 'query-string'\r\nimport io from 'socket.io-client'\r\nimport TextBox from './TextBox'\r\nimport NavBar from './NavBar'\r\nimport MessageBoard from './MessageBoard'\r\n\r\nlet socket\r\nconst Chat = ({ location,history }) => {\r\n    const [name, setName] = useState('')\r\n    const [room, setRoom] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messages,setMessages] = useState([])\r\n    const [users, setUsers] = useState([]) \r\n\r\n\r\n    const ENDPOINT = \"https://chat-app-demo0.herokuapp.com\"\r\n\r\n\r\n    useEffect(() => {\r\n        //destructure name and room for later use as emit event parameters \r\n        const {name,room} = queryString.parse(location.search)\r\n        setName(name)\r\n        setRoom(room)\r\n\r\n        //create socket instance and pass endpoint to connect it to backend io server.\r\n        var connectionOptions =  {\r\n            \"force new connection\" : true,\r\n            \"reconnectionAttempts\": \"Infinity\", \r\n            \"timeout\" : 10000,                  \r\n            \"transports\" : [\"websocket\"]\r\n        };\r\n        socket = io(ENDPOINT,connectionOptions)\r\n\r\n        //after create the socket instance, we want to emit the 'join' event to io server \r\n        //the 'joinRoom' event includes two parameters: object {name,room} and cb   \r\n        socket.emit('joinRoom', {name,room}, (error) => {\r\n            history.push('/')\r\n            alert(error)            \r\n            //cb(fired once the callBack function in eventListener completed)\r\n            //In this case, show the returned error message on browser \r\n        })\r\n\r\n        socket.on('message', ( data ) => {\r\n            setMessages(messages => [...messages,data])               \r\n        })  \r\n\r\n        return () => {\r\n            socket.off()\r\n        }\r\n\r\n    }, [ENDPOINT,location.search])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('UsersInRoom', (data) => (\r\n            setUsers(data)\r\n        ))\r\n        console.log(users)\r\n    },[users])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"chatOuterContainer\">\r\n                <div className=\"chatInnerContainer\">\r\n                    <NavBar \r\n                        room={room}    \r\n                        users={users} \r\n                        name={name}\r\n                        socket={socket}\r\n                    />\r\n\r\n                    <MessageBoard \r\n                        messages={messages}\r\n                        name={name}\r\n                    />\r\n                    <TextBox  \r\n                        message={message}\r\n                        setMessage={setMessage}\r\n                        room={room}\r\n                        socket={socket}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Join = () => {\r\n    const [name, setName] = useState('')\r\n    const [room, setRoom] = useState('')\r\n\r\n    return (\r\n        <div className=\"homeOuterContainer\">\r\n            <div className=\"homeInnerContainer\">\r\n                <h2 className=\"\">Join in to Chat!</h2>\r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"exampleFormControlInput1\" \r\n                            placeholder=\"Enter name\" \r\n                            onChange={e => setName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Room</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"exampleFormControlInput2\" \r\n                            placeholder=\"Enter room\" \r\n                            onChange={e => setRoom(e.target.value)} \r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    {/* set querystring to target */}\r\n                    <Link to={`/chat?name=${name}&room=${room}`}>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Join In</button>\r\n                    </Link>\r\n                </form>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join\r\n","import React from 'react'\r\n\r\nconst TextBox = ({ message, setMessage,room,socket }) => {\r\n    const onSendHandler = (event) => {\r\n        event.preventDefault();\r\n        //after emit sendMessage event, run the callback function \r\n        if (message !== '') {\r\n            socket.emit('createMessage', {room, message}, ()=> setMessage(''))\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div className=\"text-box\">\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Type a message\" \r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n                onKeyPress={event => event.key === 'Enter' ? onSendHandler(event) : null}\r\n                required\r\n            />\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={onSendHandler} >Send</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextBox\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavBar = ({ room, name, users, socket }) => {\r\n\r\n    const disconnectHandler = () => {\r\n        socket.disconnect()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"nav\">\r\n                <li className=\"nav-item \">\r\n                    <h5>🟢Room: {room}</h5>                    \r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <h5>🙎🏼‍♂️ {name}</h5>                    \r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <h5>current  {users.length} in room</h5>                    \r\n                </li>\r\n\r\n                <li className=\"nav-item dropdown\">\r\n                    <button className=\"btn btn-light btn-sm dropdown-toggle mb-2\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">👀 See who's in the room</button>\r\n                    <ul className=\"dropdown-menu\">\r\n                        {\r\n                            users.map(user => (\r\n                                <li className=\"dropdown-item\">{user.name}</li>\r\n                            )) \r\n                        }\r\n                    </ul>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to={'/'}>\r\n                        <button onClick={disconnectHandler} type=\"button\" className=\"btn btn-light btn-sm\">Leave chat room<i className=\"fas fa-sign-out-alt\"></i></button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst Message = ({ message, right }) => {\r\n    return (\r\n<div className=\"messageInnerboard\">\r\n        {right ? (\r\n            <div className=\"right\">\r\n            <div className=\"messagebox\">\r\n                <span>{message.user}: </span>\r\n                {message.msg}\r\n            </div>\r\n            </div>\r\n        ) : (\r\n            <div className=\"left\">\r\n            <div className=\"messagebox\">\r\n                <span>{message.user}: </span>\r\n                {message.msg}\r\n            </div>\r\n            </div>\r\n        )\r\n        }\r\n          \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Message from './Message'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst MessageBoard = ({ messages, name }) => {\r\n    return (\r\n        <ScrollToBottom className=\"messageboard\">\r\n          \r\n            {messages.map(message => (\r\n                \r\n                message.user !== name \r\n                ? ( \r\n                    <Message \r\n                        key={uuidv4()}\r\n                        message={message}\r\n                    />\r\n                ) \r\n                :\r\n                ( \r\n                    <Message \r\n                        key={uuidv4()}\r\n                        message={message}\r\n                        right=\"right\"\r\n                    />\r\n                )\r\n                \r\n            )                        \r\n            )}\r\n\r\n\r\n        </ScrollToBottom>\r\n    )\r\n}\r\n\r\nexport default MessageBoard\r\n","import React from 'react'\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Join from './component/Join'\nimport Chat from './component/Chat'\n\nconst App = () => {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/chat\" component={Chat} />\n    </Router>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);"],"sourceRoot":""}